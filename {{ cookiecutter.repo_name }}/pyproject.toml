[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.kedro]
package_name = "{{ cookiecutter.python_package }}"
project_name = "{{ cookiecutter.project_name }}"
kedro_init_version = "{{ cookiecutter.kedro_version }}"


[project]
name = "{{cookiecutter.python_package}}"
version = "0.1.0"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
license = { text ="MIT License" }
requires-python = ">={{cookiecutter.python_requires}}"
authors = [
    { name="{{cookiecutter.project_author}}", email="{{cookiecutter.author_email}}"}
]

dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
    "tomli",
    "docutils",
    "nbsphinx",
    "nbstripout",
    "sphinx-autodoc-typehints",
    "sphinx_copybutton",
    "ipykernel",
    "Jinja2",
    "myst-parser",
]

tests = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "toml",
    "pre-commit-hooks"
]

qa = [
    "pre-commit",
    "black",
    "flake8",
    "flake8-docstrings",
    "mypy",
    "nox",
    "check-manifest",
    "isort",
    "pylint",
    "check-manifest"
]

build = [
    "twine",
    "wheel",
]

dev = [
    "{{cookiecutter.python_package}}[docs]",
    "{{cookiecutter.python_package}}[tests]",
    "{{cookiecutter.python_package}}[qa]",
    "{{cookiecutter.python_package}}[build]",
]

[project.scripts]
"{{ cookiecutter.repo_name }} = {{ cookiecutter.python_package }}.__main__:main"

[project.urls]
"Sourcecode" = "https://github.com/chris-santiago/{{cookiecutter.python_package}}"
"Documentation" = "https://chris-santiago.github.io/{{cookiecutter.python_package}}/"


[tool.setuptools]
include-package-data = true
zip-safe = false


[tool.setuptools.packages.find]
where = ["src"]
exclude = ["src/tests/*"]


[tool.check-manifest]
ignore = [
    "docs",
    "docs/**",
    "notebooks",
    "notebooks/**",
    ".pre-commit-config.yaml",
    ".gitignore",
    ".pylintrc",
    "Makefile",
    "noxfile.py",
    "init.sh",
]


[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 100


[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true


[tool.pylint.master]
fail-under = 9.0
ignore-patterns = "test"
disable = [
    # Disable these for scikit-learn style code
    "invalid-name",
    "attribute-defined-outside-init",
]


[tool.pylint.format]
max-line-length = 100
max-module-lines = 1000


[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = "yes"
ignore-docstrings = "yes"


[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = "--cov=src/{{cookiecutter.python_package}} --cov-report=html --verbose"

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]
